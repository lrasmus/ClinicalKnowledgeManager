//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CKMDBModel", "FK_TopicAliases_Topics", "Topic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ClinicalKnowledgeManager.DB.Topic), "TopicAlias", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClinicalKnowledgeManager.DB.TopicAlias), true)]

#endregion

namespace ClinicalKnowledgeManager.DB
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CKMDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CKMDBEntities object using the connection string found in the 'CKMDBEntities' section of the application configuration file.
        /// </summary>
        public CKMDBEntities() : base("name=CKMDBEntities", "CKMDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CKMDBEntities object.
        /// </summary>
        public CKMDBEntities(string connectionString) : base(connectionString, "CKMDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CKMDBEntities object.
        /// </summary>
        public CKMDBEntities(EntityConnection connection) : base(connection, "CKMDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConceptMap> ConceptMaps
        {
            get
            {
                if ((_ConceptMaps == null))
                {
                    _ConceptMaps = base.CreateObjectSet<ConceptMap>("ConceptMaps");
                }
                return _ConceptMaps;
            }
        }
        private ObjectSet<ConceptMap> _ConceptMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Content> Contents
        {
            get
            {
                if ((_Contents == null))
                {
                    _Contents = base.CreateObjectSet<Content>("Contents");
                }
                return _Contents;
            }
        }
        private ObjectSet<Content> _Contents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubTopic> SubTopics
        {
            get
            {
                if ((_SubTopics == null))
                {
                    _SubTopics = base.CreateObjectSet<SubTopic>("SubTopics");
                }
                return _SubTopics;
            }
        }
        private ObjectSet<SubTopic> _SubTopics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Topic> Topics
        {
            get
            {
                if ((_Topics == null))
                {
                    _Topics = base.CreateObjectSet<Topic>("Topics");
                }
                return _Topics;
            }
        }
        private ObjectSet<Topic> _Topics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CKMLog> CKMLogs
        {
            get
            {
                if ((_CKMLogs == null))
                {
                    _CKMLogs = base.CreateObjectSet<CKMLog>("CKMLogs");
                }
                return _CKMLogs;
            }
        }
        private ObjectSet<CKMLog> _CKMLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TopicAlias> TopicAliases
        {
            get
            {
                if ((_TopicAliases == null))
                {
                    _TopicAliases = base.CreateObjectSet<TopicAlias>("TopicAliases");
                }
                return _TopicAliases;
            }
        }
        private ObjectSet<TopicAlias> _TopicAliases;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConceptMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConceptMaps(ConceptMap conceptMap)
        {
            base.AddObject("ConceptMaps", conceptMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContents(Content content)
        {
            base.AddObject("Contents", content);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubTopics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubTopics(SubTopic subTopic)
        {
            base.AddObject("SubTopics", subTopic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Topics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopics(Topic topic)
        {
            base.AddObject("Topics", topic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CKMLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCKMLogs(CKMLog cKMLog)
        {
            base.AddObject("CKMLogs", cKMLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TopicAliases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTopicAliases(TopicAlias topicAlias)
        {
            base.AddObject("TopicAliases", topicAlias);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="topic_id">No Metadata Documentation available.</param>
        /// <param name="info_recipient">No Metadata Documentation available.</param>
        /// <param name="search_code">No Metadata Documentation available.</param>
        /// <param name="search_code_system">No Metadata Documentation available.</param>
        /// <param name="search_term">No Metadata Documentation available.</param>
        /// <param name="task">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code_system">No Metadata Documentation available.</param>
        /// <param name="sub_topic_term">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="age_group">No Metadata Documentation available.</param>
        /// <param name="performer_language_code">No Metadata Documentation available.</param>
        /// <param name="recipient_language_code">No Metadata Documentation available.</param>
        /// <param name="performer_provider_code">No Metadata Documentation available.</param>
        /// <param name="recipient_provider_code">No Metadata Documentation available.</param>
        /// <param name="encounter_code">No Metadata Documentation available.</param>
        public ObjectResult<SubTopic> GetSubTopicsForContext(Nullable<global::System.Int32> topic_id, global::System.String info_recipient, global::System.String search_code, global::System.String search_code_system, global::System.String search_term, global::System.String task, global::System.String sub_topic_code, global::System.String sub_topic_code_system, global::System.String sub_topic_term, global::System.String gender, global::System.String age_group, global::System.String performer_language_code, global::System.String recipient_language_code, global::System.String performer_provider_code, global::System.String recipient_provider_code, global::System.String encounter_code)
        {
            ObjectParameter topic_idParameter;
            if (topic_id.HasValue)
            {
                topic_idParameter = new ObjectParameter("topic_id", topic_id);
            }
            else
            {
                topic_idParameter = new ObjectParameter("topic_id", typeof(global::System.Int32));
            }
    
            ObjectParameter info_recipientParameter;
            if (info_recipient != null)
            {
                info_recipientParameter = new ObjectParameter("info_recipient", info_recipient);
            }
            else
            {
                info_recipientParameter = new ObjectParameter("info_recipient", typeof(global::System.String));
            }
    
            ObjectParameter search_codeParameter;
            if (search_code != null)
            {
                search_codeParameter = new ObjectParameter("search_code", search_code);
            }
            else
            {
                search_codeParameter = new ObjectParameter("search_code", typeof(global::System.String));
            }
    
            ObjectParameter search_code_systemParameter;
            if (search_code_system != null)
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", search_code_system);
            }
            else
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", typeof(global::System.String));
            }
    
            ObjectParameter search_termParameter;
            if (search_term != null)
            {
                search_termParameter = new ObjectParameter("search_term", search_term);
            }
            else
            {
                search_termParameter = new ObjectParameter("search_term", typeof(global::System.String));
            }
    
            ObjectParameter taskParameter;
            if (task != null)
            {
                taskParameter = new ObjectParameter("task", task);
            }
            else
            {
                taskParameter = new ObjectParameter("task", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_codeParameter;
            if (sub_topic_code != null)
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", sub_topic_code);
            }
            else
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_code_systemParameter;
            if (sub_topic_code_system != null)
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", sub_topic_code_system);
            }
            else
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_termParameter;
            if (sub_topic_term != null)
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", sub_topic_term);
            }
            else
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("gender", typeof(global::System.String));
            }
    
            ObjectParameter age_groupParameter;
            if (age_group != null)
            {
                age_groupParameter = new ObjectParameter("age_group", age_group);
            }
            else
            {
                age_groupParameter = new ObjectParameter("age_group", typeof(global::System.String));
            }
    
            ObjectParameter performer_language_codeParameter;
            if (performer_language_code != null)
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", performer_language_code);
            }
            else
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_language_codeParameter;
            if (recipient_language_code != null)
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", recipient_language_code);
            }
            else
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", typeof(global::System.String));
            }
    
            ObjectParameter performer_provider_codeParameter;
            if (performer_provider_code != null)
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", performer_provider_code);
            }
            else
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_provider_codeParameter;
            if (recipient_provider_code != null)
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", recipient_provider_code);
            }
            else
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter encounter_codeParameter;
            if (encounter_code != null)
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", encounter_code);
            }
            else
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SubTopic>("GetSubTopicsForContext", topic_idParameter, info_recipientParameter, search_codeParameter, search_code_systemParameter, search_termParameter, taskParameter, sub_topic_codeParameter, sub_topic_code_systemParameter, sub_topic_termParameter, genderParameter, age_groupParameter, performer_language_codeParameter, recipient_language_codeParameter, performer_provider_codeParameter, recipient_provider_codeParameter, encounter_codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="topic_id">No Metadata Documentation available.</param>
        /// <param name="info_recipient">No Metadata Documentation available.</param>
        /// <param name="search_code">No Metadata Documentation available.</param>
        /// <param name="search_code_system">No Metadata Documentation available.</param>
        /// <param name="search_term">No Metadata Documentation available.</param>
        /// <param name="task">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code_system">No Metadata Documentation available.</param>
        /// <param name="sub_topic_term">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="age_group">No Metadata Documentation available.</param>
        /// <param name="performer_language_code">No Metadata Documentation available.</param>
        /// <param name="recipient_language_code">No Metadata Documentation available.</param>
        /// <param name="performer_provider_code">No Metadata Documentation available.</param>
        /// <param name="recipient_provider_code">No Metadata Documentation available.</param>
        /// <param name="encounter_code">No Metadata Documentation available.</param>
        public ObjectResult<SubTopic> GetSubTopicsForContext(Nullable<global::System.Int32> topic_id, global::System.String info_recipient, global::System.String search_code, global::System.String search_code_system, global::System.String search_term, global::System.String task, global::System.String sub_topic_code, global::System.String sub_topic_code_system, global::System.String sub_topic_term, global::System.String gender, global::System.String age_group, global::System.String performer_language_code, global::System.String recipient_language_code, global::System.String performer_provider_code, global::System.String recipient_provider_code, global::System.String encounter_code, MergeOption mergeOption)
        {
            ObjectParameter topic_idParameter;
            if (topic_id.HasValue)
            {
                topic_idParameter = new ObjectParameter("topic_id", topic_id);
            }
            else
            {
                topic_idParameter = new ObjectParameter("topic_id", typeof(global::System.Int32));
            }
    
            ObjectParameter info_recipientParameter;
            if (info_recipient != null)
            {
                info_recipientParameter = new ObjectParameter("info_recipient", info_recipient);
            }
            else
            {
                info_recipientParameter = new ObjectParameter("info_recipient", typeof(global::System.String));
            }
    
            ObjectParameter search_codeParameter;
            if (search_code != null)
            {
                search_codeParameter = new ObjectParameter("search_code", search_code);
            }
            else
            {
                search_codeParameter = new ObjectParameter("search_code", typeof(global::System.String));
            }
    
            ObjectParameter search_code_systemParameter;
            if (search_code_system != null)
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", search_code_system);
            }
            else
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", typeof(global::System.String));
            }
    
            ObjectParameter search_termParameter;
            if (search_term != null)
            {
                search_termParameter = new ObjectParameter("search_term", search_term);
            }
            else
            {
                search_termParameter = new ObjectParameter("search_term", typeof(global::System.String));
            }
    
            ObjectParameter taskParameter;
            if (task != null)
            {
                taskParameter = new ObjectParameter("task", task);
            }
            else
            {
                taskParameter = new ObjectParameter("task", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_codeParameter;
            if (sub_topic_code != null)
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", sub_topic_code);
            }
            else
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_code_systemParameter;
            if (sub_topic_code_system != null)
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", sub_topic_code_system);
            }
            else
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_termParameter;
            if (sub_topic_term != null)
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", sub_topic_term);
            }
            else
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("gender", typeof(global::System.String));
            }
    
            ObjectParameter age_groupParameter;
            if (age_group != null)
            {
                age_groupParameter = new ObjectParameter("age_group", age_group);
            }
            else
            {
                age_groupParameter = new ObjectParameter("age_group", typeof(global::System.String));
            }
    
            ObjectParameter performer_language_codeParameter;
            if (performer_language_code != null)
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", performer_language_code);
            }
            else
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_language_codeParameter;
            if (recipient_language_code != null)
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", recipient_language_code);
            }
            else
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", typeof(global::System.String));
            }
    
            ObjectParameter performer_provider_codeParameter;
            if (performer_provider_code != null)
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", performer_provider_code);
            }
            else
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_provider_codeParameter;
            if (recipient_provider_code != null)
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", recipient_provider_code);
            }
            else
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter encounter_codeParameter;
            if (encounter_code != null)
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", encounter_code);
            }
            else
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<SubTopic>("GetSubTopicsForContext", mergeOption, topic_idParameter, info_recipientParameter, search_codeParameter, search_code_systemParameter, search_termParameter, taskParameter, sub_topic_codeParameter, sub_topic_code_systemParameter, sub_topic_termParameter, genderParameter, age_groupParameter, performer_language_codeParameter, recipient_language_codeParameter, performer_provider_codeParameter, recipient_provider_codeParameter, encounter_codeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="info_recipient">No Metadata Documentation available.</param>
        /// <param name="search_code">No Metadata Documentation available.</param>
        /// <param name="search_code_system">No Metadata Documentation available.</param>
        /// <param name="search_term">No Metadata Documentation available.</param>
        /// <param name="task">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code_system">No Metadata Documentation available.</param>
        /// <param name="sub_topic_term">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="age_group">No Metadata Documentation available.</param>
        /// <param name="performer_language_code">No Metadata Documentation available.</param>
        /// <param name="recipient_language_code">No Metadata Documentation available.</param>
        /// <param name="performer_provider_code">No Metadata Documentation available.</param>
        /// <param name="recipient_provider_code">No Metadata Documentation available.</param>
        /// <param name="encounter_code">No Metadata Documentation available.</param>
        public ObjectResult<Topic> SearchForTopicsBasedOnContext(global::System.String info_recipient, global::System.String search_code, global::System.String search_code_system, global::System.String search_term, global::System.String task, global::System.String sub_topic_code, global::System.String sub_topic_code_system, global::System.String sub_topic_term, global::System.String gender, global::System.String age_group, global::System.String performer_language_code, global::System.String recipient_language_code, global::System.String performer_provider_code, global::System.String recipient_provider_code, global::System.String encounter_code)
        {
            ObjectParameter info_recipientParameter;
            if (info_recipient != null)
            {
                info_recipientParameter = new ObjectParameter("info_recipient", info_recipient);
            }
            else
            {
                info_recipientParameter = new ObjectParameter("info_recipient", typeof(global::System.String));
            }
    
            ObjectParameter search_codeParameter;
            if (search_code != null)
            {
                search_codeParameter = new ObjectParameter("search_code", search_code);
            }
            else
            {
                search_codeParameter = new ObjectParameter("search_code", typeof(global::System.String));
            }
    
            ObjectParameter search_code_systemParameter;
            if (search_code_system != null)
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", search_code_system);
            }
            else
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", typeof(global::System.String));
            }
    
            ObjectParameter search_termParameter;
            if (search_term != null)
            {
                search_termParameter = new ObjectParameter("search_term", search_term);
            }
            else
            {
                search_termParameter = new ObjectParameter("search_term", typeof(global::System.String));
            }
    
            ObjectParameter taskParameter;
            if (task != null)
            {
                taskParameter = new ObjectParameter("task", task);
            }
            else
            {
                taskParameter = new ObjectParameter("task", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_codeParameter;
            if (sub_topic_code != null)
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", sub_topic_code);
            }
            else
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_code_systemParameter;
            if (sub_topic_code_system != null)
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", sub_topic_code_system);
            }
            else
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_termParameter;
            if (sub_topic_term != null)
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", sub_topic_term);
            }
            else
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("gender", typeof(global::System.String));
            }
    
            ObjectParameter age_groupParameter;
            if (age_group != null)
            {
                age_groupParameter = new ObjectParameter("age_group", age_group);
            }
            else
            {
                age_groupParameter = new ObjectParameter("age_group", typeof(global::System.String));
            }
    
            ObjectParameter performer_language_codeParameter;
            if (performer_language_code != null)
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", performer_language_code);
            }
            else
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_language_codeParameter;
            if (recipient_language_code != null)
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", recipient_language_code);
            }
            else
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", typeof(global::System.String));
            }
    
            ObjectParameter performer_provider_codeParameter;
            if (performer_provider_code != null)
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", performer_provider_code);
            }
            else
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_provider_codeParameter;
            if (recipient_provider_code != null)
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", recipient_provider_code);
            }
            else
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter encounter_codeParameter;
            if (encounter_code != null)
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", encounter_code);
            }
            else
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Topic>("SearchForTopicsBasedOnContext", info_recipientParameter, search_codeParameter, search_code_systemParameter, search_termParameter, taskParameter, sub_topic_codeParameter, sub_topic_code_systemParameter, sub_topic_termParameter, genderParameter, age_groupParameter, performer_language_codeParameter, recipient_language_codeParameter, performer_provider_codeParameter, recipient_provider_codeParameter, encounter_codeParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="info_recipient">No Metadata Documentation available.</param>
        /// <param name="search_code">No Metadata Documentation available.</param>
        /// <param name="search_code_system">No Metadata Documentation available.</param>
        /// <param name="search_term">No Metadata Documentation available.</param>
        /// <param name="task">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code">No Metadata Documentation available.</param>
        /// <param name="sub_topic_code_system">No Metadata Documentation available.</param>
        /// <param name="sub_topic_term">No Metadata Documentation available.</param>
        /// <param name="gender">No Metadata Documentation available.</param>
        /// <param name="age_group">No Metadata Documentation available.</param>
        /// <param name="performer_language_code">No Metadata Documentation available.</param>
        /// <param name="recipient_language_code">No Metadata Documentation available.</param>
        /// <param name="performer_provider_code">No Metadata Documentation available.</param>
        /// <param name="recipient_provider_code">No Metadata Documentation available.</param>
        /// <param name="encounter_code">No Metadata Documentation available.</param>
        public ObjectResult<Topic> SearchForTopicsBasedOnContext(global::System.String info_recipient, global::System.String search_code, global::System.String search_code_system, global::System.String search_term, global::System.String task, global::System.String sub_topic_code, global::System.String sub_topic_code_system, global::System.String sub_topic_term, global::System.String gender, global::System.String age_group, global::System.String performer_language_code, global::System.String recipient_language_code, global::System.String performer_provider_code, global::System.String recipient_provider_code, global::System.String encounter_code, MergeOption mergeOption)
        {
            ObjectParameter info_recipientParameter;
            if (info_recipient != null)
            {
                info_recipientParameter = new ObjectParameter("info_recipient", info_recipient);
            }
            else
            {
                info_recipientParameter = new ObjectParameter("info_recipient", typeof(global::System.String));
            }
    
            ObjectParameter search_codeParameter;
            if (search_code != null)
            {
                search_codeParameter = new ObjectParameter("search_code", search_code);
            }
            else
            {
                search_codeParameter = new ObjectParameter("search_code", typeof(global::System.String));
            }
    
            ObjectParameter search_code_systemParameter;
            if (search_code_system != null)
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", search_code_system);
            }
            else
            {
                search_code_systemParameter = new ObjectParameter("search_code_system", typeof(global::System.String));
            }
    
            ObjectParameter search_termParameter;
            if (search_term != null)
            {
                search_termParameter = new ObjectParameter("search_term", search_term);
            }
            else
            {
                search_termParameter = new ObjectParameter("search_term", typeof(global::System.String));
            }
    
            ObjectParameter taskParameter;
            if (task != null)
            {
                taskParameter = new ObjectParameter("task", task);
            }
            else
            {
                taskParameter = new ObjectParameter("task", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_codeParameter;
            if (sub_topic_code != null)
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", sub_topic_code);
            }
            else
            {
                sub_topic_codeParameter = new ObjectParameter("sub_topic_code", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_code_systemParameter;
            if (sub_topic_code_system != null)
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", sub_topic_code_system);
            }
            else
            {
                sub_topic_code_systemParameter = new ObjectParameter("sub_topic_code_system", typeof(global::System.String));
            }
    
            ObjectParameter sub_topic_termParameter;
            if (sub_topic_term != null)
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", sub_topic_term);
            }
            else
            {
                sub_topic_termParameter = new ObjectParameter("sub_topic_term", typeof(global::System.String));
            }
    
            ObjectParameter genderParameter;
            if (gender != null)
            {
                genderParameter = new ObjectParameter("gender", gender);
            }
            else
            {
                genderParameter = new ObjectParameter("gender", typeof(global::System.String));
            }
    
            ObjectParameter age_groupParameter;
            if (age_group != null)
            {
                age_groupParameter = new ObjectParameter("age_group", age_group);
            }
            else
            {
                age_groupParameter = new ObjectParameter("age_group", typeof(global::System.String));
            }
    
            ObjectParameter performer_language_codeParameter;
            if (performer_language_code != null)
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", performer_language_code);
            }
            else
            {
                performer_language_codeParameter = new ObjectParameter("performer_language_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_language_codeParameter;
            if (recipient_language_code != null)
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", recipient_language_code);
            }
            else
            {
                recipient_language_codeParameter = new ObjectParameter("recipient_language_code", typeof(global::System.String));
            }
    
            ObjectParameter performer_provider_codeParameter;
            if (performer_provider_code != null)
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", performer_provider_code);
            }
            else
            {
                performer_provider_codeParameter = new ObjectParameter("performer_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter recipient_provider_codeParameter;
            if (recipient_provider_code != null)
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", recipient_provider_code);
            }
            else
            {
                recipient_provider_codeParameter = new ObjectParameter("recipient_provider_code", typeof(global::System.String));
            }
    
            ObjectParameter encounter_codeParameter;
            if (encounter_code != null)
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", encounter_code);
            }
            else
            {
                encounter_codeParameter = new ObjectParameter("encounter_code", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Topic>("SearchForTopicsBasedOnContext", mergeOption, info_recipientParameter, search_codeParameter, search_code_systemParameter, search_termParameter, taskParameter, sub_topic_codeParameter, sub_topic_code_systemParameter, sub_topic_termParameter, genderParameter, age_groupParameter, performer_language_codeParameter, recipient_language_codeParameter, performer_provider_codeParameter, recipient_provider_codeParameter, encounter_codeParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CKMDBModel", Name="CKMLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CKMLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CKMLog object.
        /// </summary>
        /// <param name="logId">Initial value of the LogId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static CKMLog CreateCKMLog(global::System.Int32 logId, global::System.DateTime createdOn)
        {
            CKMLog cKMLog = new CKMLog();
            cKMLog.LogId = logId;
            cKMLog.CreatedOn = createdOn;
            return cKMLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogId
        {
            get
            {
                return _LogId;
            }
            set
            {
                if (_LogId != value)
                {
                    OnLogIdChanging(value);
                    ReportPropertyChanging("LogId");
                    _LogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogId");
                    OnLogIdChanged();
                }
            }
        }
        private global::System.Int32 _LogId;
        partial void OnLogIdChanging(global::System.Int32 value);
        partial void OnLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientDetails
        {
            get
            {
                return _ClientDetails;
            }
            set
            {
                OnClientDetailsChanging(value);
                ReportPropertyChanging("ClientDetails");
                _ClientDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientDetails");
                OnClientDetailsChanged();
            }
        }
        private global::System.String _ClientDetails;
        partial void OnClientDetailsChanging(global::System.String value);
        partial void OnClientDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CKMDBModel", Name="ConceptMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConceptMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConceptMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static ConceptMap CreateConceptMap(global::System.Int32 id, global::System.Int32 parentId, global::System.DateTime createdOn)
        {
            ConceptMap conceptMap = new ConceptMap();
            conceptMap.Id = id;
            conceptMap.ParentId = parentId;
            conceptMap.CreatedOn = createdOn;
            return conceptMap;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CodeSystem
        {
            get
            {
                return _CodeSystem;
            }
            set
            {
                OnCodeSystemChanging(value);
                ReportPropertyChanging("CodeSystem");
                _CodeSystem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CodeSystem");
                OnCodeSystemChanged();
            }
        }
        private global::System.String _CodeSystem;
        partial void OnCodeSystemChanging(global::System.String value);
        partial void OnCodeSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentType
        {
            get
            {
                return _ParentType;
            }
            set
            {
                OnParentTypeChanging(value);
                ReportPropertyChanging("ParentType");
                _ParentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentType");
                OnParentTypeChanged();
            }
        }
        private global::System.String _ParentType;
        partial void OnParentTypeChanging(global::System.String value);
        partial void OnParentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Term
        {
            get
            {
                return _Term;
            }
            set
            {
                OnTermChanging(value);
                ReportPropertyChanging("Term");
                _Term = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Term");
                OnTermChanged();
            }
        }
        private global::System.String _Term;
        partial void OnTermChanging(global::System.String value);
        partial void OnTermChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CKMDBModel", Name="Content")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Content : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Content object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Content CreateContent(global::System.Int32 id, global::System.Int32 parentId, global::System.DateTime createdOn)
        {
            Content content = new Content();
            content.Id = id;
            content.ParentId = parentId;
            content.CreatedOn = createdOn;
            return content;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentType
        {
            get
            {
                return _ParentType;
            }
            set
            {
                OnParentTypeChanging(value);
                ReportPropertyChanging("ParentType");
                _ParentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentType");
                OnParentTypeChanged();
            }
        }
        private global::System.String _ParentType;
        partial void OnParentTypeChanging(global::System.String value);
        partial void OnParentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CKMDBModel", Name="SubTopic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubTopic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubTopic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="parentId">Initial value of the ParentId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static SubTopic CreateSubTopic(global::System.Int32 id, global::System.Int32 parentId, global::System.DateTime createdOn)
        {
            SubTopic subTopic = new SubTopic();
            subTopic.Id = id;
            subTopic.ParentId = parentId;
            subTopic.CreatedOn = createdOn;
            return subTopic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private global::System.Int32 _ParentId;
        partial void OnParentIdChanging(global::System.Int32 value);
        partial void OnParentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentType
        {
            get
            {
                return _ParentType;
            }
            set
            {
                OnParentTypeChanging(value);
                ReportPropertyChanging("ParentType");
                _ParentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentType");
                OnParentTypeChanged();
            }
        }
        private global::System.String _ParentType;
        partial void OnParentTypeChanging(global::System.String value);
        partial void OnParentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CKMDBModel", Name="Topic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Topic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Topic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static Topic CreateTopic(global::System.Int32 id, global::System.DateTime createdOn)
        {
            Topic topic = new Topic();
            topic.Id = id;
            topic.CreatedOn = createdOn;
            return topic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Audience
        {
            get
            {
                return _Audience;
            }
            set
            {
                OnAudienceChanging(value);
                ReportPropertyChanging("Audience");
                _Audience = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Audience");
                OnAudienceChanged();
            }
        }
        private global::System.String _Audience;
        partial void OnAudienceChanging(global::System.String value);
        partial void OnAudienceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalComments
        {
            get
            {
                return _InternalComments;
            }
            set
            {
                OnInternalCommentsChanging(value);
                ReportPropertyChanging("InternalComments");
                _InternalComments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalComments");
                OnInternalCommentsChanged();
            }
        }
        private global::System.String _InternalComments;
        partial void OnInternalCommentsChanging(global::System.String value);
        partial void OnInternalCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CKMDBModel", "FK_TopicAliases_Topics", "TopicAlias")]
        public EntityCollection<TopicAlias> TopicAliases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TopicAlias>("CKMDBModel.FK_TopicAliases_Topics", "TopicAlias");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TopicAlias>("CKMDBModel.FK_TopicAliases_Topics", "TopicAlias", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CKMDBModel", Name="TopicAlias")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TopicAlias : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TopicAlias object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="topicId">Initial value of the TopicId property.</param>
        /// <param name="createdOn">Initial value of the CreatedOn property.</param>
        public static TopicAlias CreateTopicAlias(global::System.Int32 id, global::System.String name, global::System.Int32 topicId, global::System.DateTime createdOn)
        {
            TopicAlias topicAlias = new TopicAlias();
            topicAlias.Id = id;
            topicAlias.Name = name;
            topicAlias.TopicId = topicId;
            topicAlias.CreatedOn = createdOn;
            return topicAlias;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TopicId
        {
            get
            {
                return _TopicId;
            }
            set
            {
                OnTopicIdChanging(value);
                ReportPropertyChanging("TopicId");
                _TopicId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TopicId");
                OnTopicIdChanged();
            }
        }
        private global::System.Int32 _TopicId;
        partial void OnTopicIdChanging(global::System.Int32 value);
        partial void OnTopicIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Context
        {
            get
            {
                return _Context;
            }
            set
            {
                OnContextChanging(value);
                ReportPropertyChanging("Context");
                _Context = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Context");
                OnContextChanged();
            }
        }
        private global::System.String _Context;
        partial void OnContextChanging(global::System.String value);
        partial void OnContextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedOn
        {
            get
            {
                return _CreatedOn;
            }
            set
            {
                OnCreatedOnChanging(value);
                ReportPropertyChanging("CreatedOn");
                _CreatedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOn");
                OnCreatedOnChanged();
            }
        }
        private global::System.DateTime _CreatedOn;
        partial void OnCreatedOnChanging(global::System.DateTime value);
        partial void OnCreatedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CKMDBModel", "FK_TopicAliases_Topics", "Topic")]
        public Topic Topic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("CKMDBModel.FK_TopicAliases_Topics", "Topic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("CKMDBModel.FK_TopicAliases_Topics", "Topic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Topic> TopicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Topic>("CKMDBModel.FK_TopicAliases_Topics", "Topic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Topic>("CKMDBModel.FK_TopicAliases_Topics", "Topic", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
